/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.weprode.nero.search.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the SearchHistory service. Represents a row in the &quot;Search_SearchHistory&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.weprode.nero.search.model.impl.SearchHistoryModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.weprode.nero.search.model.impl.SearchHistoryImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SearchHistory
 * @generated
 */
@ProviderType
public interface SearchHistoryModel extends BaseModel<SearchHistory> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a search history model instance should use the {@link SearchHistory} interface instead.
	 */

	/**
	 * Returns the primary key of this search history.
	 *
	 * @return the primary key of this search history
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this search history.
	 *
	 * @param primaryKey the primary key of this search history
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the search history ID of this search history.
	 *
	 * @return the search history ID of this search history
	 */
	public long getSearchHistoryId();

	/**
	 * Sets the search history ID of this search history.
	 *
	 * @param searchHistoryId the search history ID of this search history
	 */
	public void setSearchHistoryId(long searchHistoryId);

	/**
	 * Returns the user ID of this search history.
	 *
	 * @return the user ID of this search history
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this search history.
	 *
	 * @param userId the user ID of this search history
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this search history.
	 *
	 * @return the user uuid of this search history
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this search history.
	 *
	 * @param userUuid the user uuid of this search history
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the query of this search history.
	 *
	 * @return the query of this search history
	 */
	@AutoEscape
	public String getQuery();

	/**
	 * Sets the query of this search history.
	 *
	 * @param query the query of this search history
	 */
	public void setQuery(String query);

	/**
	 * Returns the query date of this search history.
	 *
	 * @return the query date of this search history
	 */
	public Date getQueryDate();

	/**
	 * Sets the query date of this search history.
	 *
	 * @param queryDate the query date of this search history
	 */
	public void setQueryDate(Date queryDate);

	@Override
	public SearchHistory cloneWithOriginalValues();

}