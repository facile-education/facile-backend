/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.weprode.nero.school.life.model.impl;

import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.weprode.nero.school.life.model.Renvoi;
import com.weprode.nero.school.life.model.RenvoiModel;
import com.weprode.nero.school.life.service.persistence.RenvoiPK;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the Renvoi service. Represents a row in the &quot;Schoollife_Renvoi&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>RenvoiModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RenvoiImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see RenvoiImpl
 * @generated
 */
@JSON(strict = true)
public class RenvoiModelImpl
	extends BaseModelImpl<Renvoi> implements RenvoiModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a renvoi model instance should use the <code>Renvoi</code> interface instead.
	 */
	public static final String TABLE_NAME = "Schoollife_Renvoi";

	public static final Object[][] TABLE_COLUMNS = {
		{"schoollifeSessionId", Types.BIGINT}, {"studentId", Types.BIGINT},
		{"orgId", Types.BIGINT}, {"schoolId", Types.BIGINT},
		{"renvoiDate", Types.TIMESTAMP}, {"teacherId", Types.BIGINT},
		{"sourceSessionId", Types.BIGINT},
		{"sourceSchoollifeSessionId", Types.BIGINT},
		{"sourceTeacherId", Types.BIGINT}, {"reason", Types.VARCHAR},
		{"status", Types.INTEGER}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("schoollifeSessionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("studentId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("orgId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("schoolId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("renvoiDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("teacherId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("sourceSessionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("sourceSchoollifeSessionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("sourceTeacherId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("reason", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE =
		"create table Schoollife_Renvoi (schoollifeSessionId LONG not null,studentId LONG not null,orgId LONG,schoolId LONG,renvoiDate DATE null,teacherId LONG,sourceSessionId LONG,sourceSchoollifeSessionId LONG,sourceTeacherId LONG,reason STRING null,status INTEGER,primary key (schoollifeSessionId, studentId))";

	public static final String TABLE_SQL_DROP = "drop table Schoollife_Renvoi";

	public static final String ORDER_BY_JPQL =
		" ORDER BY renvoi.id.schoollifeSessionId ASC, renvoi.id.studentId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY Schoollife_Renvoi.schoollifeSessionId ASC, Schoollife_Renvoi.studentId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SCHOOLID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SOURCETEACHERID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long STATUS_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SCHOOLLIFESESSIONID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long STUDENTID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public RenvoiModelImpl() {
	}

	@Override
	public RenvoiPK getPrimaryKey() {
		return new RenvoiPK(_schoollifeSessionId, _studentId);
	}

	@Override
	public void setPrimaryKey(RenvoiPK primaryKey) {
		setSchoollifeSessionId(primaryKey.schoollifeSessionId);
		setStudentId(primaryKey.studentId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new RenvoiPK(_schoollifeSessionId, _studentId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((RenvoiPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return Renvoi.class;
	}

	@Override
	public String getModelClassName() {
		return Renvoi.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<Renvoi, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<Renvoi, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Renvoi, Object> attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((Renvoi)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<Renvoi, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<Renvoi, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(Renvoi)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<Renvoi, Object>> getAttributeGetterFunctions() {
		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<Renvoi, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<Renvoi, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<Renvoi, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<Renvoi, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<Renvoi, Object>>();
		Map<String, BiConsumer<Renvoi, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<Renvoi, ?>>();

		attributeGetterFunctions.put(
			"schoollifeSessionId", Renvoi::getSchoollifeSessionId);
		attributeSetterBiConsumers.put(
			"schoollifeSessionId",
			(BiConsumer<Renvoi, Long>)Renvoi::setSchoollifeSessionId);
		attributeGetterFunctions.put("studentId", Renvoi::getStudentId);
		attributeSetterBiConsumers.put(
			"studentId", (BiConsumer<Renvoi, Long>)Renvoi::setStudentId);
		attributeGetterFunctions.put("orgId", Renvoi::getOrgId);
		attributeSetterBiConsumers.put(
			"orgId", (BiConsumer<Renvoi, Long>)Renvoi::setOrgId);
		attributeGetterFunctions.put("schoolId", Renvoi::getSchoolId);
		attributeSetterBiConsumers.put(
			"schoolId", (BiConsumer<Renvoi, Long>)Renvoi::setSchoolId);
		attributeGetterFunctions.put("renvoiDate", Renvoi::getRenvoiDate);
		attributeSetterBiConsumers.put(
			"renvoiDate", (BiConsumer<Renvoi, Date>)Renvoi::setRenvoiDate);
		attributeGetterFunctions.put("teacherId", Renvoi::getTeacherId);
		attributeSetterBiConsumers.put(
			"teacherId", (BiConsumer<Renvoi, Long>)Renvoi::setTeacherId);
		attributeGetterFunctions.put(
			"sourceSessionId", Renvoi::getSourceSessionId);
		attributeSetterBiConsumers.put(
			"sourceSessionId",
			(BiConsumer<Renvoi, Long>)Renvoi::setSourceSessionId);
		attributeGetterFunctions.put(
			"sourceSchoollifeSessionId", Renvoi::getSourceSchoollifeSessionId);
		attributeSetterBiConsumers.put(
			"sourceSchoollifeSessionId",
			(BiConsumer<Renvoi, Long>)Renvoi::setSourceSchoollifeSessionId);
		attributeGetterFunctions.put(
			"sourceTeacherId", Renvoi::getSourceTeacherId);
		attributeSetterBiConsumers.put(
			"sourceTeacherId",
			(BiConsumer<Renvoi, Long>)Renvoi::setSourceTeacherId);
		attributeGetterFunctions.put("reason", Renvoi::getReason);
		attributeSetterBiConsumers.put(
			"reason", (BiConsumer<Renvoi, String>)Renvoi::setReason);
		attributeGetterFunctions.put("status", Renvoi::getStatus);
		attributeSetterBiConsumers.put(
			"status", (BiConsumer<Renvoi, Integer>)Renvoi::setStatus);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getSchoollifeSessionId() {
		return _schoollifeSessionId;
	}

	@Override
	public void setSchoollifeSessionId(long schoollifeSessionId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_schoollifeSessionId = schoollifeSessionId;
	}

	@JSON
	@Override
	public long getStudentId() {
		return _studentId;
	}

	@Override
	public void setStudentId(long studentId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_studentId = studentId;
	}

	@JSON
	@Override
	public long getOrgId() {
		return _orgId;
	}

	@Override
	public void setOrgId(long orgId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_orgId = orgId;
	}

	@JSON
	@Override
	public long getSchoolId() {
		return _schoolId;
	}

	@Override
	public void setSchoolId(long schoolId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_schoolId = schoolId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSchoolId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("schoolId"));
	}

	@JSON
	@Override
	public Date getRenvoiDate() {
		return _renvoiDate;
	}

	@Override
	public void setRenvoiDate(Date renvoiDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_renvoiDate = renvoiDate;
	}

	@JSON
	@Override
	public long getTeacherId() {
		return _teacherId;
	}

	@Override
	public void setTeacherId(long teacherId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_teacherId = teacherId;
	}

	@JSON
	@Override
	public long getSourceSessionId() {
		return _sourceSessionId;
	}

	@Override
	public void setSourceSessionId(long sourceSessionId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sourceSessionId = sourceSessionId;
	}

	@JSON
	@Override
	public long getSourceSchoollifeSessionId() {
		return _sourceSchoollifeSessionId;
	}

	@Override
	public void setSourceSchoollifeSessionId(long sourceSchoollifeSessionId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sourceSchoollifeSessionId = sourceSchoollifeSessionId;
	}

	@JSON
	@Override
	public long getSourceTeacherId() {
		return _sourceTeacherId;
	}

	@Override
	public void setSourceTeacherId(long sourceTeacherId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sourceTeacherId = sourceTeacherId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSourceTeacherId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("sourceTeacherId"));
	}

	@JSON
	@Override
	public String getReason() {
		if (_reason == null) {
			return "";
		}
		else {
			return _reason;
		}
	}

	@Override
	public void setReason(String reason) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_reason = reason;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public int getOriginalStatus() {
		return GetterUtil.getInteger(
			this.<Integer>getColumnOriginalValue("status"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public Renvoi toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, Renvoi>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RenvoiImpl renvoiImpl = new RenvoiImpl();

		renvoiImpl.setSchoollifeSessionId(getSchoollifeSessionId());
		renvoiImpl.setStudentId(getStudentId());
		renvoiImpl.setOrgId(getOrgId());
		renvoiImpl.setSchoolId(getSchoolId());
		renvoiImpl.setRenvoiDate(getRenvoiDate());
		renvoiImpl.setTeacherId(getTeacherId());
		renvoiImpl.setSourceSessionId(getSourceSessionId());
		renvoiImpl.setSourceSchoollifeSessionId(getSourceSchoollifeSessionId());
		renvoiImpl.setSourceTeacherId(getSourceTeacherId());
		renvoiImpl.setReason(getReason());
		renvoiImpl.setStatus(getStatus());

		renvoiImpl.resetOriginalValues();

		return renvoiImpl;
	}

	@Override
	public Renvoi cloneWithOriginalValues() {
		RenvoiImpl renvoiImpl = new RenvoiImpl();

		renvoiImpl.setSchoollifeSessionId(
			this.<Long>getColumnOriginalValue("schoollifeSessionId"));
		renvoiImpl.setStudentId(this.<Long>getColumnOriginalValue("studentId"));
		renvoiImpl.setOrgId(this.<Long>getColumnOriginalValue("orgId"));
		renvoiImpl.setSchoolId(this.<Long>getColumnOriginalValue("schoolId"));
		renvoiImpl.setRenvoiDate(
			this.<Date>getColumnOriginalValue("renvoiDate"));
		renvoiImpl.setTeacherId(this.<Long>getColumnOriginalValue("teacherId"));
		renvoiImpl.setSourceSessionId(
			this.<Long>getColumnOriginalValue("sourceSessionId"));
		renvoiImpl.setSourceSchoollifeSessionId(
			this.<Long>getColumnOriginalValue("sourceSchoollifeSessionId"));
		renvoiImpl.setSourceTeacherId(
			this.<Long>getColumnOriginalValue("sourceTeacherId"));
		renvoiImpl.setReason(this.<String>getColumnOriginalValue("reason"));
		renvoiImpl.setStatus(this.<Integer>getColumnOriginalValue("status"));

		return renvoiImpl;
	}

	@Override
	public int compareTo(Renvoi renvoi) {
		RenvoiPK primaryKey = renvoi.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof Renvoi)) {
			return false;
		}

		Renvoi renvoi = (Renvoi)object;

		RenvoiPK primaryKey = renvoi.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<Renvoi> toCacheModel() {
		RenvoiCacheModel renvoiCacheModel = new RenvoiCacheModel();

		renvoiCacheModel.renvoiPK = getPrimaryKey();

		renvoiCacheModel.schoollifeSessionId = getSchoollifeSessionId();

		renvoiCacheModel.studentId = getStudentId();

		renvoiCacheModel.orgId = getOrgId();

		renvoiCacheModel.schoolId = getSchoolId();

		Date renvoiDate = getRenvoiDate();

		if (renvoiDate != null) {
			renvoiCacheModel.renvoiDate = renvoiDate.getTime();
		}
		else {
			renvoiCacheModel.renvoiDate = Long.MIN_VALUE;
		}

		renvoiCacheModel.teacherId = getTeacherId();

		renvoiCacheModel.sourceSessionId = getSourceSessionId();

		renvoiCacheModel.sourceSchoollifeSessionId =
			getSourceSchoollifeSessionId();

		renvoiCacheModel.sourceTeacherId = getSourceTeacherId();

		renvoiCacheModel.reason = getReason();

		String reason = renvoiCacheModel.reason;

		if ((reason != null) && (reason.length() == 0)) {
			renvoiCacheModel.reason = null;
		}

		renvoiCacheModel.status = getStatus();

		return renvoiCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<Renvoi, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<Renvoi, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Renvoi, Object> attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((Renvoi)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, Renvoi>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					Renvoi.class, ModelWrapper.class);

	}

	private long _schoollifeSessionId;
	private long _studentId;
	private long _orgId;
	private long _schoolId;
	private Date _renvoiDate;
	private long _teacherId;
	private long _sourceSessionId;
	private long _sourceSchoollifeSessionId;
	private long _sourceTeacherId;
	private String _reason;
	private int _status;

	public <T> T getColumnValue(String columnName) {
		Function<Renvoi, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((Renvoi)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("schoollifeSessionId", _schoollifeSessionId);
		_columnOriginalValues.put("studentId", _studentId);
		_columnOriginalValues.put("orgId", _orgId);
		_columnOriginalValues.put("schoolId", _schoolId);
		_columnOriginalValues.put("renvoiDate", _renvoiDate);
		_columnOriginalValues.put("teacherId", _teacherId);
		_columnOriginalValues.put("sourceSessionId", _sourceSessionId);
		_columnOriginalValues.put(
			"sourceSchoollifeSessionId", _sourceSchoollifeSessionId);
		_columnOriginalValues.put("sourceTeacherId", _sourceTeacherId);
		_columnOriginalValues.put("reason", _reason);
		_columnOriginalValues.put("status", _status);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("schoollifeSessionId", 1L);

		columnBitmasks.put("studentId", 2L);

		columnBitmasks.put("orgId", 4L);

		columnBitmasks.put("schoolId", 8L);

		columnBitmasks.put("renvoiDate", 16L);

		columnBitmasks.put("teacherId", 32L);

		columnBitmasks.put("sourceSessionId", 64L);

		columnBitmasks.put("sourceSchoollifeSessionId", 128L);

		columnBitmasks.put("sourceTeacherId", 256L);

		columnBitmasks.put("reason", 512L);

		columnBitmasks.put("status", 1024L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private Renvoi _escapedModel;

}