/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.weprode.nero.progression.model;

import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the ItemAttachedFile service. Represents a row in the &quot;Progression_ItemAttachedFile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.weprode.nero.progression.model.impl.ItemAttachedFileModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.weprode.nero.progression.model.impl.ItemAttachedFileImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ItemAttachedFile
 * @generated
 */
@ProviderType
public interface ItemAttachedFileModel extends BaseModel<ItemAttachedFile> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a item attached file model instance should use the {@link ItemAttachedFile} interface instead.
	 */

	/**
	 * Returns the primary key of this item attached file.
	 *
	 * @return the primary key of this item attached file
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this item attached file.
	 *
	 * @param primaryKey the primary key of this item attached file
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the item attached file ID of this item attached file.
	 *
	 * @return the item attached file ID of this item attached file
	 */
	public long getItemAttachedFileId();

	/**
	 * Sets the item attached file ID of this item attached file.
	 *
	 * @param itemAttachedFileId the item attached file ID of this item attached file
	 */
	public void setItemAttachedFileId(long itemAttachedFileId);

	/**
	 * Returns the progression item ID of this item attached file.
	 *
	 * @return the progression item ID of this item attached file
	 */
	public long getProgressionItemId();

	/**
	 * Sets the progression item ID of this item attached file.
	 *
	 * @param progressionItemId the progression item ID of this item attached file
	 */
	public void setProgressionItemId(long progressionItemId);

	/**
	 * Returns the file entry ID of this item attached file.
	 *
	 * @return the file entry ID of this item attached file
	 */
	public long getFileEntryId();

	/**
	 * Sets the file entry ID of this item attached file.
	 *
	 * @param fileEntryId the file entry ID of this item attached file
	 */
	public void setFileEntryId(long fileEntryId);

	/**
	 * Returns the is audio recording of this item attached file.
	 *
	 * @return the is audio recording of this item attached file
	 */
	public boolean getIsAudioRecording();

	/**
	 * Returns <code>true</code> if this item attached file is is audio recording.
	 *
	 * @return <code>true</code> if this item attached file is is audio recording; <code>false</code> otherwise
	 */
	public boolean isIsAudioRecording();

	/**
	 * Sets whether this item attached file is is audio recording.
	 *
	 * @param isAudioRecording the is audio recording of this item attached file
	 */
	public void setIsAudioRecording(boolean isAudioRecording);

	/**
	 * Returns the is to be completed of this item attached file.
	 *
	 * @return the is to be completed of this item attached file
	 */
	public boolean getIsToBeCompleted();

	/**
	 * Returns <code>true</code> if this item attached file is is to be completed.
	 *
	 * @return <code>true</code> if this item attached file is is to be completed; <code>false</code> otherwise
	 */
	public boolean isIsToBeCompleted();

	/**
	 * Sets whether this item attached file is is to be completed.
	 *
	 * @param isToBeCompleted the is to be completed of this item attached file
	 */
	public void setIsToBeCompleted(boolean isToBeCompleted);

	@Override
	public ItemAttachedFile cloneWithOriginalValues();

}