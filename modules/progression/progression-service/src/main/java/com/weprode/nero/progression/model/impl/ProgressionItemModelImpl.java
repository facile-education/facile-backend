/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.weprode.nero.progression.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.weprode.nero.progression.model.ProgressionItem;
import com.weprode.nero.progression.model.ProgressionItemModel;
import com.weprode.nero.progression.model.ProgressionItemSoap;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the ProgressionItem service. Represents a row in the &quot;Progression_ProgressionItem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ProgressionItemModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProgressionItemImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ProgressionItemImpl
 * @generated
 */
@JSON(strict = true)
public class ProgressionItemModelImpl
	extends BaseModelImpl<ProgressionItem> implements ProgressionItemModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a progression item model instance should use the <code>ProgressionItem</code> interface instead.
	 */
	public static final String TABLE_NAME = "Progression_ProgressionItem";

	public static final Object[][] TABLE_COLUMNS = {
		{"progressionItemId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"progressionId", Types.BIGINT}, {"sessionId", Types.BIGINT},
		{"homeworkId", Types.BIGINT}, {"progressionFolderId", Types.BIGINT},
		{"modifiedDate", Types.TIMESTAMP}, {"itemName", Types.VARCHAR},
		{"isHomework", Types.BOOLEAN}, {"duration", Types.VARCHAR},
		{"type_", Types.INTEGER}, {"order_", Types.INTEGER}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("progressionItemId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("progressionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("sessionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("homeworkId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("progressionFolderId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("itemName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("isHomework", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("duration", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("type_", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("order_", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE =
		"create table Progression_ProgressionItem (progressionItemId LONG not null primary key,companyId LONG,progressionId LONG,sessionId LONG,homeworkId LONG,progressionFolderId LONG,modifiedDate DATE null,itemName VARCHAR(75) null,isHomework BOOLEAN,duration VARCHAR(75) null,type_ INTEGER,order_ INTEGER)";

	public static final String TABLE_SQL_DROP =
		"drop table Progression_ProgressionItem";

	public static final String ORDER_BY_JPQL =
		" ORDER BY progressionItem.order ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY Progression_ProgressionItem.order_ ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long HOMEWORKID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PROGRESSIONFOLDERID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PROGRESSIONID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PROGRESSIONITEMID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SESSIONID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ORDER_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static ProgressionItem toModel(ProgressionItemSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ProgressionItem model = new ProgressionItemImpl();

		model.setProgressionItemId(soapModel.getProgressionItemId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setProgressionId(soapModel.getProgressionId());
		model.setSessionId(soapModel.getSessionId());
		model.setHomeworkId(soapModel.getHomeworkId());
		model.setProgressionFolderId(soapModel.getProgressionFolderId());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setItemName(soapModel.getItemName());
		model.setIsHomework(soapModel.isIsHomework());
		model.setDuration(soapModel.getDuration());
		model.setType(soapModel.getType());
		model.setOrder(soapModel.getOrder());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static List<ProgressionItem> toModels(
		ProgressionItemSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<ProgressionItem> models = new ArrayList<ProgressionItem>(
			soapModels.length);

		for (ProgressionItemSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public ProgressionItemModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _progressionItemId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setProgressionItemId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _progressionItemId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ProgressionItem.class;
	}

	@Override
	public String getModelClassName() {
		return ProgressionItem.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<ProgressionItem, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<ProgressionItem, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ProgressionItem, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((ProgressionItem)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<ProgressionItem, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<ProgressionItem, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(ProgressionItem)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<ProgressionItem, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<ProgressionItem, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, ProgressionItem>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			ProgressionItem.class.getClassLoader(), ProgressionItem.class,
			ModelWrapper.class);

		try {
			Constructor<ProgressionItem> constructor =
				(Constructor<ProgressionItem>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<ProgressionItem, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<ProgressionItem, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<ProgressionItem, Object>>
			attributeGetterFunctions =
				new LinkedHashMap<String, Function<ProgressionItem, Object>>();
		Map<String, BiConsumer<ProgressionItem, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<ProgressionItem, ?>>();

		attributeGetterFunctions.put(
			"progressionItemId", ProgressionItem::getProgressionItemId);
		attributeSetterBiConsumers.put(
			"progressionItemId",
			(BiConsumer<ProgressionItem, Long>)
				ProgressionItem::setProgressionItemId);
		attributeGetterFunctions.put(
			"companyId", ProgressionItem::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<ProgressionItem, Long>)ProgressionItem::setCompanyId);
		attributeGetterFunctions.put(
			"progressionId", ProgressionItem::getProgressionId);
		attributeSetterBiConsumers.put(
			"progressionId",
			(BiConsumer<ProgressionItem, Long>)
				ProgressionItem::setProgressionId);
		attributeGetterFunctions.put(
			"sessionId", ProgressionItem::getSessionId);
		attributeSetterBiConsumers.put(
			"sessionId",
			(BiConsumer<ProgressionItem, Long>)ProgressionItem::setSessionId);
		attributeGetterFunctions.put(
			"homeworkId", ProgressionItem::getHomeworkId);
		attributeSetterBiConsumers.put(
			"homeworkId",
			(BiConsumer<ProgressionItem, Long>)ProgressionItem::setHomeworkId);
		attributeGetterFunctions.put(
			"progressionFolderId", ProgressionItem::getProgressionFolderId);
		attributeSetterBiConsumers.put(
			"progressionFolderId",
			(BiConsumer<ProgressionItem, Long>)
				ProgressionItem::setProgressionFolderId);
		attributeGetterFunctions.put(
			"modifiedDate", ProgressionItem::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<ProgressionItem, Date>)
				ProgressionItem::setModifiedDate);
		attributeGetterFunctions.put("itemName", ProgressionItem::getItemName);
		attributeSetterBiConsumers.put(
			"itemName",
			(BiConsumer<ProgressionItem, String>)ProgressionItem::setItemName);
		attributeGetterFunctions.put(
			"isHomework", ProgressionItem::getIsHomework);
		attributeSetterBiConsumers.put(
			"isHomework",
			(BiConsumer<ProgressionItem, Boolean>)
				ProgressionItem::setIsHomework);
		attributeGetterFunctions.put("duration", ProgressionItem::getDuration);
		attributeSetterBiConsumers.put(
			"duration",
			(BiConsumer<ProgressionItem, String>)ProgressionItem::setDuration);
		attributeGetterFunctions.put("type", ProgressionItem::getType);
		attributeSetterBiConsumers.put(
			"type",
			(BiConsumer<ProgressionItem, Integer>)ProgressionItem::setType);
		attributeGetterFunctions.put("order", ProgressionItem::getOrder);
		attributeSetterBiConsumers.put(
			"order",
			(BiConsumer<ProgressionItem, Integer>)ProgressionItem::setOrder);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getProgressionItemId() {
		return _progressionItemId;
	}

	@Override
	public void setProgressionItemId(long progressionItemId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_progressionItemId = progressionItemId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalProgressionItemId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("progressionItemId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getProgressionId() {
		return _progressionId;
	}

	@Override
	public void setProgressionId(long progressionId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_progressionId = progressionId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalProgressionId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("progressionId"));
	}

	@JSON
	@Override
	public long getSessionId() {
		return _sessionId;
	}

	@Override
	public void setSessionId(long sessionId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sessionId = sessionId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSessionId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("sessionId"));
	}

	@JSON
	@Override
	public long getHomeworkId() {
		return _homeworkId;
	}

	@Override
	public void setHomeworkId(long homeworkId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_homeworkId = homeworkId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalHomeworkId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("homeworkId"));
	}

	@JSON
	@Override
	public long getProgressionFolderId() {
		return _progressionFolderId;
	}

	@Override
	public void setProgressionFolderId(long progressionFolderId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_progressionFolderId = progressionFolderId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalProgressionFolderId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("progressionFolderId"));
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getItemName() {
		if (_itemName == null) {
			return "";
		}
		else {
			return _itemName;
		}
	}

	@Override
	public void setItemName(String itemName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_itemName = itemName;
	}

	@JSON
	@Override
	public boolean getIsHomework() {
		return _isHomework;
	}

	@JSON
	@Override
	public boolean isIsHomework() {
		return _isHomework;
	}

	@Override
	public void setIsHomework(boolean isHomework) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_isHomework = isHomework;
	}

	@JSON
	@Override
	public String getDuration() {
		if (_duration == null) {
			return "";
		}
		else {
			return _duration;
		}
	}

	@Override
	public void setDuration(String duration) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_duration = duration;
	}

	@JSON
	@Override
	public int getType() {
		return _type;
	}

	@Override
	public void setType(int type) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_type = type;
	}

	@JSON
	@Override
	public int getOrder() {
		return _order;
	}

	@Override
	public void setOrder(int order) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_order = order;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), ProgressionItem.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ProgressionItem toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, ProgressionItem>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ProgressionItemImpl progressionItemImpl = new ProgressionItemImpl();

		progressionItemImpl.setProgressionItemId(getProgressionItemId());
		progressionItemImpl.setCompanyId(getCompanyId());
		progressionItemImpl.setProgressionId(getProgressionId());
		progressionItemImpl.setSessionId(getSessionId());
		progressionItemImpl.setHomeworkId(getHomeworkId());
		progressionItemImpl.setProgressionFolderId(getProgressionFolderId());
		progressionItemImpl.setModifiedDate(getModifiedDate());
		progressionItemImpl.setItemName(getItemName());
		progressionItemImpl.setIsHomework(isIsHomework());
		progressionItemImpl.setDuration(getDuration());
		progressionItemImpl.setType(getType());
		progressionItemImpl.setOrder(getOrder());

		progressionItemImpl.resetOriginalValues();

		return progressionItemImpl;
	}

	@Override
	public ProgressionItem cloneWithOriginalValues() {
		ProgressionItemImpl progressionItemImpl = new ProgressionItemImpl();

		progressionItemImpl.setProgressionItemId(
			this.<Long>getColumnOriginalValue("progressionItemId"));
		progressionItemImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		progressionItemImpl.setProgressionId(
			this.<Long>getColumnOriginalValue("progressionId"));
		progressionItemImpl.setSessionId(
			this.<Long>getColumnOriginalValue("sessionId"));
		progressionItemImpl.setHomeworkId(
			this.<Long>getColumnOriginalValue("homeworkId"));
		progressionItemImpl.setProgressionFolderId(
			this.<Long>getColumnOriginalValue("progressionFolderId"));
		progressionItemImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		progressionItemImpl.setItemName(
			this.<String>getColumnOriginalValue("itemName"));
		progressionItemImpl.setIsHomework(
			this.<Boolean>getColumnOriginalValue("isHomework"));
		progressionItemImpl.setDuration(
			this.<String>getColumnOriginalValue("duration"));
		progressionItemImpl.setType(
			this.<Integer>getColumnOriginalValue("type_"));
		progressionItemImpl.setOrder(
			this.<Integer>getColumnOriginalValue("order_"));

		return progressionItemImpl;
	}

	@Override
	public int compareTo(ProgressionItem progressionItem) {
		int value = 0;

		if (getOrder() < progressionItem.getOrder()) {
			value = -1;
		}
		else if (getOrder() > progressionItem.getOrder()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof ProgressionItem)) {
			return false;
		}

		ProgressionItem progressionItem = (ProgressionItem)object;

		long primaryKey = progressionItem.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<ProgressionItem> toCacheModel() {
		ProgressionItemCacheModel progressionItemCacheModel =
			new ProgressionItemCacheModel();

		progressionItemCacheModel.progressionItemId = getProgressionItemId();

		progressionItemCacheModel.companyId = getCompanyId();

		progressionItemCacheModel.progressionId = getProgressionId();

		progressionItemCacheModel.sessionId = getSessionId();

		progressionItemCacheModel.homeworkId = getHomeworkId();

		progressionItemCacheModel.progressionFolderId =
			getProgressionFolderId();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			progressionItemCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			progressionItemCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		progressionItemCacheModel.itemName = getItemName();

		String itemName = progressionItemCacheModel.itemName;

		if ((itemName != null) && (itemName.length() == 0)) {
			progressionItemCacheModel.itemName = null;
		}

		progressionItemCacheModel.isHomework = isIsHomework();

		progressionItemCacheModel.duration = getDuration();

		String duration = progressionItemCacheModel.duration;

		if ((duration != null) && (duration.length() == 0)) {
			progressionItemCacheModel.duration = null;
		}

		progressionItemCacheModel.type = getType();

		progressionItemCacheModel.order = getOrder();

		return progressionItemCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<ProgressionItem, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<ProgressionItem, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ProgressionItem, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((ProgressionItem)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<ProgressionItem, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<ProgressionItem, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ProgressionItem, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((ProgressionItem)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, ProgressionItem>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private long _progressionItemId;
	private long _companyId;
	private long _progressionId;
	private long _sessionId;
	private long _homeworkId;
	private long _progressionFolderId;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _itemName;
	private boolean _isHomework;
	private String _duration;
	private int _type;
	private int _order;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<ProgressionItem, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((ProgressionItem)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("progressionItemId", _progressionItemId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("progressionId", _progressionId);
		_columnOriginalValues.put("sessionId", _sessionId);
		_columnOriginalValues.put("homeworkId", _homeworkId);
		_columnOriginalValues.put("progressionFolderId", _progressionFolderId);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("itemName", _itemName);
		_columnOriginalValues.put("isHomework", _isHomework);
		_columnOriginalValues.put("duration", _duration);
		_columnOriginalValues.put("type_", _type);
		_columnOriginalValues.put("order_", _order);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("type_", "type");
		attributeNames.put("order_", "order");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("progressionItemId", 1L);

		columnBitmasks.put("companyId", 2L);

		columnBitmasks.put("progressionId", 4L);

		columnBitmasks.put("sessionId", 8L);

		columnBitmasks.put("homeworkId", 16L);

		columnBitmasks.put("progressionFolderId", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("itemName", 128L);

		columnBitmasks.put("isHomework", 256L);

		columnBitmasks.put("duration", 512L);

		columnBitmasks.put("type_", 1024L);

		columnBitmasks.put("order_", 2048L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private ProgressionItem _escapedModel;

}