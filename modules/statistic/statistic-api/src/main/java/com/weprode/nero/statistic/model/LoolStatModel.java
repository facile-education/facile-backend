/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.weprode.nero.statistic.model;

import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the LoolStat service. Represents a row in the &quot;Statistics_LoolStat&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.weprode.nero.statistic.model.impl.LoolStatModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.weprode.nero.statistic.model.impl.LoolStatImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LoolStat
 * @generated
 */
@ProviderType
public interface LoolStatModel extends BaseModel<LoolStat> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a lool stat model instance should use the {@link LoolStat} interface instead.
	 */

	/**
	 * Returns the primary key of this lool stat.
	 *
	 * @return the primary key of this lool stat
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this lool stat.
	 *
	 * @param primaryKey the primary key of this lool stat
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the stat ID of this lool stat.
	 *
	 * @return the stat ID of this lool stat
	 */
	public long getStatId();

	/**
	 * Sets the stat ID of this lool stat.
	 *
	 * @param statId the stat ID of this lool stat
	 */
	public void setStatId(long statId);

	/**
	 * Returns the object ID of this lool stat.
	 *
	 * @return the object ID of this lool stat
	 */
	public long getObjectId();

	/**
	 * Sets the object ID of this lool stat.
	 *
	 * @param objectId the object ID of this lool stat
	 */
	public void setObjectId(long objectId);

	/**
	 * Returns the user ID of this lool stat.
	 *
	 * @return the user ID of this lool stat
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this lool stat.
	 *
	 * @param userId the user ID of this lool stat
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this lool stat.
	 *
	 * @return the user uuid of this lool stat
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this lool stat.
	 *
	 * @param userUuid the user uuid of this lool stat
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the save action of this lool stat.
	 *
	 * @return the save action of this lool stat
	 */
	public boolean getSaveAction();

	/**
	 * Returns <code>true</code> if this lool stat is save action.
	 *
	 * @return <code>true</code> if this lool stat is save action; <code>false</code> otherwise
	 */
	public boolean isSaveAction();

	/**
	 * Sets whether this lool stat is save action.
	 *
	 * @param saveAction the save action of this lool stat
	 */
	public void setSaveAction(boolean saveAction);

	/**
	 * Returns the action date of this lool stat.
	 *
	 * @return the action date of this lool stat
	 */
	public Date getActionDate();

	/**
	 * Sets the action date of this lool stat.
	 *
	 * @param actionDate the action date of this lool stat
	 */
	public void setActionDate(Date actionDate);

	/**
	 * Returns the type of this lool stat.
	 *
	 * @return the type of this lool stat
	 */
	public int getType();

	/**
	 * Sets the type of this lool stat.
	 *
	 * @param type the type of this lool stat
	 */
	public void setType(int type);

	@Override
	public LoolStat cloneWithOriginalValues();

}