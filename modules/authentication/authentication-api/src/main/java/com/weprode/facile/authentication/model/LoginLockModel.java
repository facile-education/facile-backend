/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.weprode.facile.authentication.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the LoginLock service. Represents a row in the &quot;Authentication_LoginLock&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.weprode.facile.authentication.model.impl.LoginLockModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.weprode.facile.authentication.model.impl.LoginLockImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LoginLock
 * @generated
 */
@ProviderType
public interface LoginLockModel extends BaseModel<LoginLock> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a login lock model instance should use the {@link LoginLock} interface instead.
	 */

	/**
	 * Returns the primary key of this login lock.
	 *
	 * @return the primary key of this login lock
	 */
	public String getPrimaryKey();

	/**
	 * Sets the primary key of this login lock.
	 *
	 * @param primaryKey the primary key of this login lock
	 */
	public void setPrimaryKey(String primaryKey);

	/**
	 * Returns the login of this login lock.
	 *
	 * @return the login of this login lock
	 */
	@AutoEscape
	public String getLogin();

	/**
	 * Sets the login of this login lock.
	 *
	 * @param login the login of this login lock
	 */
	public void setLogin(String login);

	/**
	 * Returns the failed login attempts of this login lock.
	 *
	 * @return the failed login attempts of this login lock
	 */
	public int getFailedLoginAttempts();

	/**
	 * Sets the failed login attempts of this login lock.
	 *
	 * @param failedLoginAttempts the failed login attempts of this login lock
	 */
	public void setFailedLoginAttempts(int failedLoginAttempts);

	/**
	 * Returns the is locked of this login lock.
	 *
	 * @return the is locked of this login lock
	 */
	public boolean getIsLocked();

	/**
	 * Returns <code>true</code> if this login lock is is locked.
	 *
	 * @return <code>true</code> if this login lock is is locked; <code>false</code> otherwise
	 */
	public boolean isIsLocked();

	/**
	 * Sets whether this login lock is is locked.
	 *
	 * @param isLocked the is locked of this login lock
	 */
	public void setIsLocked(boolean isLocked);

	/**
	 * Returns the lock end date of this login lock.
	 *
	 * @return the lock end date of this login lock
	 */
	public Date getLockEndDate();

	/**
	 * Sets the lock end date of this login lock.
	 *
	 * @param lockEndDate the lock end date of this login lock
	 */
	public void setLockEndDate(Date lockEndDate);

	@Override
	public LoginLock cloneWithOriginalValues();

}