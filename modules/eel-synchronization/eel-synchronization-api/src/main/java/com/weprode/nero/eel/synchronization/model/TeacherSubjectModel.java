/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.weprode.nero.eel.synchronization.model;

import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the TeacherSubject service. Represents a row in the &quot;EELSynchro_TeacherSubject&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.weprode.nero.eel.synchronization.model.impl.TeacherSubjectModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.weprode.nero.eel.synchronization.model.impl.TeacherSubjectImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TeacherSubject
 * @generated
 */
@ProviderType
public interface TeacherSubjectModel extends BaseModel<TeacherSubject> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a teacher subject model instance should use the {@link TeacherSubject} interface instead.
	 */

	/**
	 * Returns the primary key of this teacher subject.
	 *
	 * @return the primary key of this teacher subject
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this teacher subject.
	 *
	 * @param primaryKey the primary key of this teacher subject
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the teacher subject ID of this teacher subject.
	 *
	 * @return the teacher subject ID of this teacher subject
	 */
	public long getTeacherSubjectId();

	/**
	 * Sets the teacher subject ID of this teacher subject.
	 *
	 * @param teacherSubjectId the teacher subject ID of this teacher subject
	 */
	public void setTeacherSubjectId(long teacherSubjectId);

	/**
	 * Returns the teacher ID of this teacher subject.
	 *
	 * @return the teacher ID of this teacher subject
	 */
	public long getTeacherId();

	/**
	 * Sets the teacher ID of this teacher subject.
	 *
	 * @param teacherId the teacher ID of this teacher subject
	 */
	public void setTeacherId(long teacherId);

	/**
	 * Returns the subject ID of this teacher subject.
	 *
	 * @return the subject ID of this teacher subject
	 */
	public long getSubjectId();

	/**
	 * Sets the subject ID of this teacher subject.
	 *
	 * @param subjectId the subject ID of this teacher subject
	 */
	public void setSubjectId(long subjectId);

	/**
	 * Returns the school ID of this teacher subject.
	 *
	 * @return the school ID of this teacher subject
	 */
	public long getSchoolId();

	/**
	 * Sets the school ID of this teacher subject.
	 *
	 * @param schoolId the school ID of this teacher subject
	 */
	public void setSchoolId(long schoolId);

	@Override
	public TeacherSubject cloneWithOriginalValues();

}