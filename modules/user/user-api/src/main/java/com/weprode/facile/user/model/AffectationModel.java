/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.weprode.facile.user.model;

import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Affectation service. Represents a row in the &quot;User_Affectation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.weprode.facile.user.model.impl.AffectationModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.weprode.facile.user.model.impl.AffectationImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Affectation
 * @generated
 */
@ProviderType
public interface AffectationModel extends BaseModel<Affectation> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a affectation model instance should use the {@link Affectation} interface instead.
	 */

	/**
	 * Returns the primary key of this affectation.
	 *
	 * @return the primary key of this affectation
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this affectation.
	 *
	 * @param primaryKey the primary key of this affectation
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the affectation ID of this affectation.
	 *
	 * @return the affectation ID of this affectation
	 */
	public long getAffectationId();

	/**
	 * Sets the affectation ID of this affectation.
	 *
	 * @param affectationId the affectation ID of this affectation
	 */
	public void setAffectationId(long affectationId);

	/**
	 * Returns the user ID of this affectation.
	 *
	 * @return the user ID of this affectation
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this affectation.
	 *
	 * @param userId the user ID of this affectation
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this affectation.
	 *
	 * @return the user uuid of this affectation
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this affectation.
	 *
	 * @param userUuid the user uuid of this affectation
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the org ID of this affectation.
	 *
	 * @return the org ID of this affectation
	 */
	public long getOrgId();

	/**
	 * Sets the org ID of this affectation.
	 *
	 * @param orgId the org ID of this affectation
	 */
	public void setOrgId(long orgId);

	/**
	 * Returns the school ID of this affectation.
	 *
	 * @return the school ID of this affectation
	 */
	public long getSchoolId();

	/**
	 * Sets the school ID of this affectation.
	 *
	 * @param schoolId the school ID of this affectation
	 */
	public void setSchoolId(long schoolId);

	/**
	 * Returns the type of this affectation.
	 *
	 * @return the type of this affectation
	 */
	public int getType();

	/**
	 * Sets the type of this affectation.
	 *
	 * @param type the type of this affectation
	 */
	public void setType(int type);

	/**
	 * Returns the admin user ID of this affectation.
	 *
	 * @return the admin user ID of this affectation
	 */
	public long getAdminUserId();

	/**
	 * Sets the admin user ID of this affectation.
	 *
	 * @param adminUserId the admin user ID of this affectation
	 */
	public void setAdminUserId(long adminUserId);

	/**
	 * Returns the admin user uuid of this affectation.
	 *
	 * @return the admin user uuid of this affectation
	 */
	public String getAdminUserUuid();

	/**
	 * Sets the admin user uuid of this affectation.
	 *
	 * @param adminUserUuid the admin user uuid of this affectation
	 */
	public void setAdminUserUuid(String adminUserUuid);

	/**
	 * Returns the affectation date of this affectation.
	 *
	 * @return the affectation date of this affectation
	 */
	public Date getAffectationDate();

	/**
	 * Sets the affectation date of this affectation.
	 *
	 * @param affectationDate the affectation date of this affectation
	 */
	public void setAffectationDate(Date affectationDate);

	/**
	 * Returns the expiration date of this affectation.
	 *
	 * @return the expiration date of this affectation
	 */
	public Date getExpirationDate();

	/**
	 * Sets the expiration date of this affectation.
	 *
	 * @param expirationDate the expiration date of this affectation
	 */
	public void setExpirationDate(Date expirationDate);

	@Override
	public Affectation cloneWithOriginalValues();

}