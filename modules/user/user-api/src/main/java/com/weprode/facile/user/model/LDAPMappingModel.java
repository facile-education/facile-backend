/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.weprode.facile.user.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the LDAPMapping service. Represents a row in the &quot;User_LDAPMapping&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.weprode.facile.user.model.impl.LDAPMappingModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.weprode.facile.user.model.impl.LDAPMappingImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LDAPMapping
 * @generated
 */
@ProviderType
public interface LDAPMappingModel extends BaseModel<LDAPMapping> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a ldap mapping model instance should use the {@link LDAPMapping} interface instead.
	 */

	/**
	 * Returns the primary key of this ldap mapping.
	 *
	 * @return the primary key of this ldap mapping
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this ldap mapping.
	 *
	 * @param primaryKey the primary key of this ldap mapping
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the user ID of this ldap mapping.
	 *
	 * @return the user ID of this ldap mapping
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this ldap mapping.
	 *
	 * @param UserId the user ID of this ldap mapping
	 */
	public void setUserId(long UserId);

	/**
	 * Returns the user uuid of this ldap mapping.
	 *
	 * @return the user uuid of this ldap mapping
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this ldap mapping.
	 *
	 * @param UserUuid the user uuid of this ldap mapping
	 */
	public void setUserUuid(String UserUuid);

	/**
	 * Returns the ent person jointure of this ldap mapping.
	 *
	 * @return the ent person jointure of this ldap mapping
	 */
	@AutoEscape
	public String getEntPersonJointure();

	/**
	 * Sets the ent person jointure of this ldap mapping.
	 *
	 * @param EntPersonJointure the ent person jointure of this ldap mapping
	 */
	public void setEntPersonJointure(String EntPersonJointure);

	/**
	 * Returns the uid of this ldap mapping.
	 *
	 * @return the uid of this ldap mapping
	 */
	@AutoEscape
	public String getUID();

	/**
	 * Sets the uid of this ldap mapping.
	 *
	 * @param UID the uid of this ldap mapping
	 */
	public void setUID(String UID);

	/**
	 * Returns the ine of this ldap mapping.
	 *
	 * @return the ine of this ldap mapping
	 */
	@AutoEscape
	public String getINE();

	/**
	 * Sets the ine of this ldap mapping.
	 *
	 * @param INE the ine of this ldap mapping
	 */
	public void setINE(String INE);

	/**
	 * Returns the ent eleve struct rattach ID of this ldap mapping.
	 *
	 * @return the ent eleve struct rattach ID of this ldap mapping
	 */
	@AutoEscape
	public String getEntEleveStructRattachId();

	/**
	 * Sets the ent eleve struct rattach ID of this ldap mapping.
	 *
	 * @param EntEleveStructRattachId the ent eleve struct rattach ID of this ldap mapping
	 */
	public void setEntEleveStructRattachId(String EntEleveStructRattachId);

	@Override
	public LDAPMapping cloneWithOriginalValues();

}