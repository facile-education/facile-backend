/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.weprode.facile.user.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the UserContact service. Represents a row in the &quot;User_UserContact&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.weprode.facile.user.model.impl.UserContactModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.weprode.facile.user.model.impl.UserContactImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see UserContact
 * @generated
 */
@ProviderType
public interface UserContactModel extends BaseModel<UserContact> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a user contact model instance should use the {@link UserContact} interface instead.
	 */

	/**
	 * Returns the primary key of this user contact.
	 *
	 * @return the primary key of this user contact
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this user contact.
	 *
	 * @param primaryKey the primary key of this user contact
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the user ID of this user contact.
	 *
	 * @return the user ID of this user contact
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this user contact.
	 *
	 * @param userId the user ID of this user contact
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this user contact.
	 *
	 * @return the user uuid of this user contact
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this user contact.
	 *
	 * @param userUuid the user uuid of this user contact
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the address of this user contact.
	 *
	 * @return the address of this user contact
	 */
	@AutoEscape
	public String getAddress();

	/**
	 * Sets the address of this user contact.
	 *
	 * @param address the address of this user contact
	 */
	public void setAddress(String address);

	/**
	 * Returns the mobile phone of this user contact.
	 *
	 * @return the mobile phone of this user contact
	 */
	@AutoEscape
	public String getMobilePhone();

	/**
	 * Sets the mobile phone of this user contact.
	 *
	 * @param mobilePhone the mobile phone of this user contact
	 */
	public void setMobilePhone(String mobilePhone);

	/**
	 * Returns the home phone of this user contact.
	 *
	 * @return the home phone of this user contact
	 */
	@AutoEscape
	public String getHomePhone();

	/**
	 * Sets the home phone of this user contact.
	 *
	 * @param homePhone the home phone of this user contact
	 */
	public void setHomePhone(String homePhone);

	/**
	 * Returns the pro phone of this user contact.
	 *
	 * @return the pro phone of this user contact
	 */
	@AutoEscape
	public String getProPhone();

	/**
	 * Sets the pro phone of this user contact.
	 *
	 * @param proPhone the pro phone of this user contact
	 */
	public void setProPhone(String proPhone);

	@Override
	public UserContact cloneWithOriginalValues();

}