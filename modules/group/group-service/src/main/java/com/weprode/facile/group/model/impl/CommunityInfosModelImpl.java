/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.weprode.facile.group.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.weprode.facile.group.model.CommunityInfos;
import com.weprode.facile.group.model.CommunityInfosModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the CommunityInfos service. Represents a row in the &quot;Group_CommunityInfos&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>CommunityInfosModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CommunityInfosImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CommunityInfosImpl
 * @generated
 */
@JSON(strict = true)
public class CommunityInfosModelImpl
	extends BaseModelImpl<CommunityInfos> implements CommunityInfosModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a community infos model instance should use the <code>CommunityInfos</code> interface instead.
	 */
	public static final String TABLE_NAME = "Group_CommunityInfos";

	public static final Object[][] TABLE_COLUMNS = {
		{"communityInfosId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"status", Types.INTEGER}, {"creatorId", Types.BIGINT},
		{"creationDate", Types.TIMESTAMP}, {"expirationDate", Types.TIMESTAMP},
		{"isPedagogical", Types.BOOLEAN}, {"isContactList", Types.BOOLEAN},
		{"color", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("communityInfosId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("creatorId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("creationDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("expirationDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("isPedagogical", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("isContactList", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("color", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table Group_CommunityInfos (communityInfosId LONG not null primary key,groupId LONG,status INTEGER,creatorId LONG,creationDate DATE null,expirationDate DATE null,isPedagogical BOOLEAN,isContactList BOOLEAN,color VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP =
		"drop table Group_CommunityInfos";

	public static final String ORDER_BY_JPQL =
		" ORDER BY communityInfos.communityInfosId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY Group_CommunityInfos.communityInfosId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATORID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long EXPIRATIONDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long STATUS_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMMUNITYINFOSID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public CommunityInfosModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _communityInfosId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCommunityInfosId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _communityInfosId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CommunityInfos.class;
	}

	@Override
	public String getModelClassName() {
		return CommunityInfos.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<CommunityInfos, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<CommunityInfos, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommunityInfos, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((CommunityInfos)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<CommunityInfos, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<CommunityInfos, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(CommunityInfos)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<CommunityInfos, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<CommunityInfos, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<CommunityInfos, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<CommunityInfos, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<CommunityInfos, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<CommunityInfos, Object>>();
		Map<String, BiConsumer<CommunityInfos, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<CommunityInfos, ?>>();

		attributeGetterFunctions.put(
			"communityInfosId", CommunityInfos::getCommunityInfosId);
		attributeSetterBiConsumers.put(
			"communityInfosId",
			(BiConsumer<CommunityInfos, Long>)
				CommunityInfos::setCommunityInfosId);
		attributeGetterFunctions.put("groupId", CommunityInfos::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<CommunityInfos, Long>)CommunityInfos::setGroupId);
		attributeGetterFunctions.put("status", CommunityInfos::getStatus);
		attributeSetterBiConsumers.put(
			"status",
			(BiConsumer<CommunityInfos, Integer>)CommunityInfos::setStatus);
		attributeGetterFunctions.put("creatorId", CommunityInfos::getCreatorId);
		attributeSetterBiConsumers.put(
			"creatorId",
			(BiConsumer<CommunityInfos, Long>)CommunityInfos::setCreatorId);
		attributeGetterFunctions.put(
			"creationDate", CommunityInfos::getCreationDate);
		attributeSetterBiConsumers.put(
			"creationDate",
			(BiConsumer<CommunityInfos, Date>)CommunityInfos::setCreationDate);
		attributeGetterFunctions.put(
			"expirationDate", CommunityInfos::getExpirationDate);
		attributeSetterBiConsumers.put(
			"expirationDate",
			(BiConsumer<CommunityInfos, Date>)
				CommunityInfos::setExpirationDate);
		attributeGetterFunctions.put(
			"isPedagogical", CommunityInfos::getIsPedagogical);
		attributeSetterBiConsumers.put(
			"isPedagogical",
			(BiConsumer<CommunityInfos, Boolean>)
				CommunityInfos::setIsPedagogical);
		attributeGetterFunctions.put(
			"isContactList", CommunityInfos::getIsContactList);
		attributeSetterBiConsumers.put(
			"isContactList",
			(BiConsumer<CommunityInfos, Boolean>)
				CommunityInfos::setIsContactList);
		attributeGetterFunctions.put("color", CommunityInfos::getColor);
		attributeSetterBiConsumers.put(
			"color",
			(BiConsumer<CommunityInfos, String>)CommunityInfos::setColor);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getCommunityInfosId() {
		return _communityInfosId;
	}

	@Override
	public void setCommunityInfosId(long communityInfosId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_communityInfosId = communityInfosId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public int getOriginalStatus() {
		return GetterUtil.getInteger(
			this.<Integer>getColumnOriginalValue("status"));
	}

	@JSON
	@Override
	public long getCreatorId() {
		return _creatorId;
	}

	@Override
	public void setCreatorId(long creatorId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_creatorId = creatorId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCreatorId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("creatorId"));
	}

	@JSON
	@Override
	public Date getCreationDate() {
		return _creationDate;
	}

	@Override
	public void setCreationDate(Date creationDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_creationDate = creationDate;
	}

	@JSON
	@Override
	public Date getExpirationDate() {
		return _expirationDate;
	}

	@Override
	public void setExpirationDate(Date expirationDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expirationDate = expirationDate;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public Date getOriginalExpirationDate() {
		return getColumnOriginalValue("expirationDate");
	}

	@JSON
	@Override
	public boolean getIsPedagogical() {
		return _isPedagogical;
	}

	@JSON
	@Override
	public boolean isIsPedagogical() {
		return _isPedagogical;
	}

	@Override
	public void setIsPedagogical(boolean isPedagogical) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_isPedagogical = isPedagogical;
	}

	@JSON
	@Override
	public boolean getIsContactList() {
		return _isContactList;
	}

	@JSON
	@Override
	public boolean isIsContactList() {
		return _isContactList;
	}

	@Override
	public void setIsContactList(boolean isContactList) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_isContactList = isContactList;
	}

	@JSON
	@Override
	public String getColor() {
		if (_color == null) {
			return "";
		}
		else {
			return _color;
		}
	}

	@Override
	public void setColor(String color) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_color = color;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, CommunityInfos.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CommunityInfos toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, CommunityInfos>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CommunityInfosImpl communityInfosImpl = new CommunityInfosImpl();

		communityInfosImpl.setCommunityInfosId(getCommunityInfosId());
		communityInfosImpl.setGroupId(getGroupId());
		communityInfosImpl.setStatus(getStatus());
		communityInfosImpl.setCreatorId(getCreatorId());
		communityInfosImpl.setCreationDate(getCreationDate());
		communityInfosImpl.setExpirationDate(getExpirationDate());
		communityInfosImpl.setIsPedagogical(isIsPedagogical());
		communityInfosImpl.setIsContactList(isIsContactList());
		communityInfosImpl.setColor(getColor());

		communityInfosImpl.resetOriginalValues();

		return communityInfosImpl;
	}

	@Override
	public CommunityInfos cloneWithOriginalValues() {
		CommunityInfosImpl communityInfosImpl = new CommunityInfosImpl();

		communityInfosImpl.setCommunityInfosId(
			this.<Long>getColumnOriginalValue("communityInfosId"));
		communityInfosImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		communityInfosImpl.setStatus(
			this.<Integer>getColumnOriginalValue("status"));
		communityInfosImpl.setCreatorId(
			this.<Long>getColumnOriginalValue("creatorId"));
		communityInfosImpl.setCreationDate(
			this.<Date>getColumnOriginalValue("creationDate"));
		communityInfosImpl.setExpirationDate(
			this.<Date>getColumnOriginalValue("expirationDate"));
		communityInfosImpl.setIsPedagogical(
			this.<Boolean>getColumnOriginalValue("isPedagogical"));
		communityInfosImpl.setIsContactList(
			this.<Boolean>getColumnOriginalValue("isContactList"));
		communityInfosImpl.setColor(
			this.<String>getColumnOriginalValue("color"));

		return communityInfosImpl;
	}

	@Override
	public int compareTo(CommunityInfos communityInfos) {
		long primaryKey = communityInfos.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof CommunityInfos)) {
			return false;
		}

		CommunityInfos communityInfos = (CommunityInfos)object;

		long primaryKey = communityInfos.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<CommunityInfos> toCacheModel() {
		CommunityInfosCacheModel communityInfosCacheModel =
			new CommunityInfosCacheModel();

		communityInfosCacheModel.communityInfosId = getCommunityInfosId();

		communityInfosCacheModel.groupId = getGroupId();

		communityInfosCacheModel.status = getStatus();

		communityInfosCacheModel.creatorId = getCreatorId();

		Date creationDate = getCreationDate();

		if (creationDate != null) {
			communityInfosCacheModel.creationDate = creationDate.getTime();
		}
		else {
			communityInfosCacheModel.creationDate = Long.MIN_VALUE;
		}

		Date expirationDate = getExpirationDate();

		if (expirationDate != null) {
			communityInfosCacheModel.expirationDate = expirationDate.getTime();
		}
		else {
			communityInfosCacheModel.expirationDate = Long.MIN_VALUE;
		}

		communityInfosCacheModel.isPedagogical = isIsPedagogical();

		communityInfosCacheModel.isContactList = isIsContactList();

		communityInfosCacheModel.color = getColor();

		String color = communityInfosCacheModel.color;

		if ((color != null) && (color.length() == 0)) {
			communityInfosCacheModel.color = null;
		}

		return communityInfosCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<CommunityInfos, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<CommunityInfos, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommunityInfos, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((CommunityInfos)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, CommunityInfos>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					CommunityInfos.class, ModelWrapper.class);

	}

	private long _communityInfosId;
	private long _groupId;
	private int _status;
	private long _creatorId;
	private Date _creationDate;
	private Date _expirationDate;
	private boolean _isPedagogical;
	private boolean _isContactList;
	private String _color;

	public <T> T getColumnValue(String columnName) {
		Function<CommunityInfos, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((CommunityInfos)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("communityInfosId", _communityInfosId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("status", _status);
		_columnOriginalValues.put("creatorId", _creatorId);
		_columnOriginalValues.put("creationDate", _creationDate);
		_columnOriginalValues.put("expirationDate", _expirationDate);
		_columnOriginalValues.put("isPedagogical", _isPedagogical);
		_columnOriginalValues.put("isContactList", _isContactList);
		_columnOriginalValues.put("color", _color);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("communityInfosId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("status", 4L);

		columnBitmasks.put("creatorId", 8L);

		columnBitmasks.put("creationDate", 16L);

		columnBitmasks.put("expirationDate", 32L);

		columnBitmasks.put("isPedagogical", 64L);

		columnBitmasks.put("isContactList", 128L);

		columnBitmasks.put("color", 256L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private CommunityInfos _escapedModel;

}