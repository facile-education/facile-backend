/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.weprode.nero.preference.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the UserProperties service. Represents a row in the &quot;Preference_UserProperties&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.weprode.nero.preference.model.impl.UserPropertiesModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.weprode.nero.preference.model.impl.UserPropertiesImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see UserProperties
 * @generated
 */
@ProviderType
public interface UserPropertiesModel extends BaseModel<UserProperties> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a user properties model instance should use the {@link UserProperties} interface instead.
	 */

	/**
	 * Returns the primary key of this user properties.
	 *
	 * @return the primary key of this user properties
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this user properties.
	 *
	 * @param primaryKey the primary key of this user properties
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the user ID of this user properties.
	 *
	 * @return the user ID of this user properties
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this user properties.
	 *
	 * @param userId the user ID of this user properties
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this user properties.
	 *
	 * @return the user uuid of this user properties
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this user properties.
	 *
	 * @param userUuid the user uuid of this user properties
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the manual account of this user properties.
	 *
	 * @return the manual account of this user properties
	 */
	public boolean getManualAccount();

	/**
	 * Returns <code>true</code> if this user properties is manual account.
	 *
	 * @return <code>true</code> if this user properties is manual account; <code>false</code> otherwise
	 */
	public boolean isManualAccount();

	/**
	 * Sets whether this user properties is manual account.
	 *
	 * @param manualAccount the manual account of this user properties
	 */
	public void setManualAccount(boolean manualAccount);

	/**
	 * Returns the hide menu of this user properties.
	 *
	 * @return the hide menu of this user properties
	 */
	public boolean getHideMenu();

	/**
	 * Returns <code>true</code> if this user properties is hide menu.
	 *
	 * @return <code>true</code> if this user properties is hide menu; <code>false</code> otherwise
	 */
	public boolean isHideMenu();

	/**
	 * Sets whether this user properties is hide menu.
	 *
	 * @param hideMenu the hide menu of this user properties
	 */
	public void setHideMenu(boolean hideMenu);

	/**
	 * Returns the theme color of this user properties.
	 *
	 * @return the theme color of this user properties
	 */
	@AutoEscape
	public String getThemeColor();

	/**
	 * Sets the theme color of this user properties.
	 *
	 * @param themeColor the theme color of this user properties
	 */
	public void setThemeColor(String themeColor);

	/**
	 * Returns the etab ID of this user properties.
	 *
	 * @return the etab ID of this user properties
	 */
	public long getEtabId();

	/**
	 * Sets the etab ID of this user properties.
	 *
	 * @param etabId the etab ID of this user properties
	 */
	public void setEtabId(long etabId);

	/**
	 * Returns the prefered school ID of this user properties.
	 *
	 * @return the prefered school ID of this user properties
	 */
	public long getPreferedSchoolId();

	/**
	 * Sets the prefered school ID of this user properties.
	 *
	 * @param preferedSchoolId the prefered school ID of this user properties
	 */
	public void setPreferedSchoolId(long preferedSchoolId);

	/**
	 * Returns the webdav activated of this user properties.
	 *
	 * @return the webdav activated of this user properties
	 */
	public boolean getWebdavActivated();

	/**
	 * Returns <code>true</code> if this user properties is webdav activated.
	 *
	 * @return <code>true</code> if this user properties is webdav activated; <code>false</code> otherwise
	 */
	public boolean isWebdavActivated();

	/**
	 * Sets whether this user properties is webdav activated.
	 *
	 * @param webdavActivated the webdav activated of this user properties
	 */
	public void setWebdavActivated(boolean webdavActivated);

	/**
	 * Returns the terms of use agreed date of this user properties.
	 *
	 * @return the terms of use agreed date of this user properties
	 */
	public Date getTermsOfUseAgreedDate();

	/**
	 * Sets the terms of use agreed date of this user properties.
	 *
	 * @param termsOfUseAgreedDate the terms of use agreed date of this user properties
	 */
	public void setTermsOfUseAgreedDate(Date termsOfUseAgreedDate);

	/**
	 * Returns the last synchro date of this user properties.
	 *
	 * @return the last synchro date of this user properties
	 */
	public Date getLastSynchroDate();

	/**
	 * Sets the last synchro date of this user properties.
	 *
	 * @param lastSynchroDate the last synchro date of this user properties
	 */
	public void setLastSynchroDate(Date lastSynchroDate);

	@Override
	public UserProperties cloneWithOriginalValues();

}