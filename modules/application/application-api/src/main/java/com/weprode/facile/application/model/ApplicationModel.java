/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.weprode.facile.application.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Application service. Represents a row in the &quot;Application_Application&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.weprode.facile.application.model.impl.ApplicationModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.weprode.facile.application.model.impl.ApplicationImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Application
 * @generated
 */
@ProviderType
public interface ApplicationModel extends BaseModel<Application> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a application model instance should use the {@link Application} interface instead.
	 */

	/**
	 * Returns the primary key of this application.
	 *
	 * @return the primary key of this application
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this application.
	 *
	 * @param primaryKey the primary key of this application
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the application ID of this application.
	 *
	 * @return the application ID of this application
	 */
	public long getApplicationId();

	/**
	 * Sets the application ID of this application.
	 *
	 * @param applicationId the application ID of this application
	 */
	public void setApplicationId(long applicationId);

	/**
	 * Returns the application name of this application.
	 *
	 * @return the application name of this application
	 */
	@AutoEscape
	public String getApplicationName();

	/**
	 * Sets the application name of this application.
	 *
	 * @param applicationName the application name of this application
	 */
	public void setApplicationName(String applicationName);

	/**
	 * Returns the application key of this application.
	 *
	 * @return the application key of this application
	 */
	@AutoEscape
	public String getApplicationKey();

	/**
	 * Sets the application key of this application.
	 *
	 * @param applicationKey the application key of this application
	 */
	public void setApplicationKey(String applicationKey);

	/**
	 * Returns the category name of this application.
	 *
	 * @return the category name of this application
	 */
	@AutoEscape
	public String getCategoryName();

	/**
	 * Sets the category name of this application.
	 *
	 * @param categoryName the category name of this application
	 */
	public void setCategoryName(String categoryName);

	/**
	 * Returns the image of this application.
	 *
	 * @return the image of this application
	 */
	@AutoEscape
	public String getImage();

	/**
	 * Sets the image of this application.
	 *
	 * @param image the image of this application
	 */
	public void setImage(String image);

	/**
	 * Returns the has custom url of this application.
	 *
	 * @return the has custom url of this application
	 */
	public boolean getHasCustomUrl();

	/**
	 * Returns <code>true</code> if this application is has custom url.
	 *
	 * @return <code>true</code> if this application is has custom url; <code>false</code> otherwise
	 */
	public boolean isHasCustomUrl();

	/**
	 * Sets whether this application is has custom url.
	 *
	 * @param hasCustomUrl the has custom url of this application
	 */
	public void setHasCustomUrl(boolean hasCustomUrl);

	/**
	 * Returns the has global url of this application.
	 *
	 * @return the has global url of this application
	 */
	public boolean getHasGlobalUrl();

	/**
	 * Returns <code>true</code> if this application is has global url.
	 *
	 * @return <code>true</code> if this application is has global url; <code>false</code> otherwise
	 */
	public boolean isHasGlobalUrl();

	/**
	 * Sets whether this application is has global url.
	 *
	 * @param hasGlobalUrl the has global url of this application
	 */
	public void setHasGlobalUrl(boolean hasGlobalUrl);

	/**
	 * Returns the global url of this application.
	 *
	 * @return the global url of this application
	 */
	@AutoEscape
	public String getGlobalUrl();

	/**
	 * Sets the global url of this application.
	 *
	 * @param globalUrl the global url of this application
	 */
	public void setGlobalUrl(String globalUrl);

	/**
	 * Returns the export user of this application.
	 *
	 * @return the export user of this application
	 */
	public boolean getExportUser();

	/**
	 * Returns <code>true</code> if this application is export user.
	 *
	 * @return <code>true</code> if this application is export user; <code>false</code> otherwise
	 */
	public boolean isExportUser();

	/**
	 * Sets whether this application is export user.
	 *
	 * @param exportUser the export user of this application
	 */
	public void setExportUser(boolean exportUser);

	/**
	 * Returns the export parent of this application.
	 *
	 * @return the export parent of this application
	 */
	public boolean getExportParent();

	/**
	 * Returns <code>true</code> if this application is export parent.
	 *
	 * @return <code>true</code> if this application is export parent; <code>false</code> otherwise
	 */
	public boolean isExportParent();

	/**
	 * Sets whether this application is export parent.
	 *
	 * @param exportParent the export parent of this application
	 */
	public void setExportParent(boolean exportParent);

	/**
	 * Returns the export student of this application.
	 *
	 * @return the export student of this application
	 */
	public boolean getExportStudent();

	/**
	 * Returns <code>true</code> if this application is export student.
	 *
	 * @return <code>true</code> if this application is export student; <code>false</code> otherwise
	 */
	public boolean isExportStudent();

	/**
	 * Sets whether this application is export student.
	 *
	 * @param exportStudent the export student of this application
	 */
	public void setExportStudent(boolean exportStudent);

	/**
	 * Returns the export teacher of this application.
	 *
	 * @return the export teacher of this application
	 */
	public boolean getExportTeacher();

	/**
	 * Returns <code>true</code> if this application is export teacher.
	 *
	 * @return <code>true</code> if this application is export teacher; <code>false</code> otherwise
	 */
	public boolean isExportTeacher();

	/**
	 * Sets whether this application is export teacher.
	 *
	 * @param exportTeacher the export teacher of this application
	 */
	public void setExportTeacher(boolean exportTeacher);

	/**
	 * Returns the export other of this application.
	 *
	 * @return the export other of this application
	 */
	public boolean getExportOther();

	/**
	 * Returns <code>true</code> if this application is export other.
	 *
	 * @return <code>true</code> if this application is export other; <code>false</code> otherwise
	 */
	public boolean isExportOther();

	/**
	 * Sets whether this application is export other.
	 *
	 * @param exportOther the export other of this application
	 */
	public void setExportOther(boolean exportOther);

	/**
	 * Returns the menu entry ID of this application.
	 *
	 * @return the menu entry ID of this application
	 */
	public long getMenuEntryId();

	/**
	 * Sets the menu entry ID of this application.
	 *
	 * @param menuEntryId the menu entry ID of this application
	 */
	public void setMenuEntryId(long menuEntryId);

	@Override
	public Application cloneWithOriginalValues();

}